"use client"

import { FeedbackElement } from "@/components/FeedbackElement";
import FeedbackContext from "@/providers/FeedbackContext";
import { FeedbackType, PostFeedbackType, } from "@/types/FeedbackTypes";
import axios, { AxiosResponse } from "axios";
import { Metadata } from "next";
import { useContext, useEffect, useState } from "react";

// export const metadata: Metadata = {
//     title: "Cocktails Feedback",
//     description: "Generated by create next app",
// }

export default function Feedbacks() {

    const {
        feedbacks,
        feedbacksPending,
        getFeedbacks,
        feedbacksRefresh,
        feedbacksUpdate
    } = useContext(FeedbackContext);


    useEffect(() => {
        getFeedbacks();
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [feedbacksRefresh])


    const [sendFeedbackForm, setSendFeedbackForm] = useState<PostFeedbackType>({
        title: "",
        details: ""
    });


    const changeSendFeedbackForm = (e: any) => {
        setSendFeedbackForm((prev: PostFeedbackType) => ({
            ...prev,
            [e.target.name]: e.target.value
        }));
    }

    const sendFeedback = () => {
        axios.post(`${process.env.HOST}/api/feedback`, sendFeedbackForm)
            .then((res: AxiosResponse) => {
                if (res.status == 201) feedbacksUpdate();
            })
            .catch(err => {
                console.log(err);
            })
    }


    return (
        <div className="w-96">

            <h1 className="text-2xl mb-10">Did you find errors?</h1>


            <div className="form-control w-full max-w-xs">
                <label className="label">
                    <span className="label-text">About/When?</span>
                    {/* <span className="label-text-alt">Top Right label</span> */}
                </label>
                <input type="text" placeholder="" className="input input-bordered w-full max-w-xs"
                    name="title"
                    value={sendFeedbackForm.title}
                    onChange={changeSendFeedbackForm}
                />
                {/* <label className="label">
                    <span className="label-text-alt">Bottom Left label</span>
                    <span className="label-text-alt">Bottom Right label</span>
                </label> */}
            </div>

            <div className="form-control w-full max-w-xs mt-8">
                <label className="label">
                    <span className="label-text">Details</span>
                    {/* <span className="label-text-alt">Top Right label</span> */}
                </label>
                <textarea className="textarea h-44" placeholder=""
                    name="details"
                    value={sendFeedbackForm.details}
                    onChange={changeSendFeedbackForm}
                />
                {/* <label className="label">
                    <span className="label-text-alt">Bottom Left label</span>
                    <span className="label-text-alt">Bottom Right label</span>
                </label> */}

                <button
                className="btn btn-secondary mt-6 w-1/2 mx-auto"
                onClick={() => {
                    sendFeedback();
                }}>Send Feedback</button>

            </div>

            {
                !feedbacksPending &&
                <div className="overflow-x-auto mt-20">
                    <table className="table">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>About</th>
                                <th>Details</th>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                feedbacks
                                    .map((feedback: FeedbackType) => (
                                        <FeedbackElement {...feedback} key={feedback.id} />
                                    ))
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    )
}